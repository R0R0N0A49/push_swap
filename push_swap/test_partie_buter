int	*ft_sort_2(int *tab_b, int len, int mid_len)
{
	int	i;
	int	j;

	i = 1;
	j = 0;
	while (i <= len / 2)
	{
		if (tab_b[0] < tab_b[1])
		{
			tab_b = ft_swap(tab_b, 'b', len);
			i = 0;
		}
		if (len > 2 && tab_b[0] > mid_len)
		{
			tab_b = ft_rotate(tab_b, 'b', len);
			i = 0;
		}
		i++;
	}
	i = (len - 1);
	while (j == 0 && i == len / 2)
	{
		while (len > 2 && i > len / 2)
		{
			if (tab_b[len - 2] > tab_b[len - 1])
			{
				tab_b = ft_reverse(tab_b, 'b', len);
				tab_b = ft_reverse(tab_b, 'b', len);
				tab_b = ft_swap(tab_b, 'b', len);
				j += 2;
			}
			i--;
		}
		while (j > 0)
		{
			if (tab_b[0] < mid_len)
				tab_b = ft_swap(tab_b, 'b', len);
			else
			{
				tab_b = ft_rotate(tab_b, 'b', len);
				j--;
			}
		}
	}
	return (tab_b);
}
